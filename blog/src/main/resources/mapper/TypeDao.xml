<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper:根标签，namespace：命名空间，随便写，一般保证命名空间唯一 -->
<mapper namespace="com.caishu.dao.TypeDao">
    <insert id="saveType" parameterType="Type">
        insert into t_type values (#{id}, #{name});
    </insert>

    <select id="getType" resultType="Type">
        select id, name from t_type where id = #{id}
    </select>

    <select id="getTypeByName" resultType="Type">
        select * from t_type where name = #{name};
    </select>

    <select id="getAllType" resultType="Type">
        select * from t_type
    </select>

    <select id="getBlogType" resultMap="type">
        <!--两个id可能会相冲，取别名即可-->
        select t.id tid, t.name, b.id bid, b.title, b.type_id
        from t_type t, t_blog b
        where t.id = b.type_id
    </select>

    <resultMap id="type" type="Type">
        <id property="id" column="tid"/>
        <result property="name" column="name"/>
        <!-- 配置一对多的关系
            property：填写pojo类中集合类类属性的名称
            javaType：填写集合类型的名称
        -->
        <collection property="blogs" ofType="Blog">
            <!-- 配置主键，是关联Blog的唯一标识，左边是Blog的Java实体类对应的属性，右边是数据库对应的属性 -->
            <id property="id" column="bid"/>
            <result property="typeId" column="type_id"/>
            <result property="title" column="title"/>
        </collection>
    </resultMap>

    <update id="updateType" parameterType="Type">
        update t_type set name = #{name} where id = #{id};
    </update>

    <delete id="deleteType">
        delete from t_type where id = #{id};
    </delete>

</mapper>
